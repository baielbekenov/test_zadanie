
services:
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: my_admin
      POSTGRES_PASSWORD: my_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: db

  backend:
    image: baielbekenov/test_zadanie_backend:latest
    command: >
      sh -c "until pg_isready -h db -p 5432 -U my_admin; do echo waiting for postgres; sleep 2; done && gunicorn main.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - .:/app
    env_file:
      - .env
    environment:
      - PG_HOST=db
      - PG_PORT=5432
      - PG_USER=my_admin
    ports:
      - "8000:8000"
    depends_on:
      - db
    container_name: backend

  migration:
    image: baielbekenov/test_zadanie_backend:latest
    command: >
      sh -c "sleep 20 && python3 manage.py makemigrations && python3 manage.py migrate"
    volumes:
      - ./test_zadanie:/usr/src/app/
    depends_on:
      - db
    container_name: migration

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
    container_name: nginx
    deploy:
      restart_policy:
        condition: any

  daphne:
    build:
      context: .
      dockerfile: daphne/Dockerfile  # Указываем Dockerfile для Daphne
    ports:
      - "9000:9000"
    depends_on:
      - db
    container_name: daphne

volumes:
  postgres_data:
  static_volume:
  media_volume:
